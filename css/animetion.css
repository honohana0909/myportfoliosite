@charset "UTF-8";
/* CSS Document */
/*========= ローディング画面のためのCSS ===============*/
#splash {
	position: fixed;
	width: 100%;
	height: 100%;
	background: #a2c2d0;
	z-index: 9999999;
	text-align:center;
	color:#555;
}

#splash-logo {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

/*========= 画面遷移のためのCSS ===============*/

/*画面遷移アニメーション*/
.splashbg{
    display: none;
}

/*bodyにappearクラスがついたら出現*/
body.appear .splashbg{
    display: block;
    content: "";
    position:fixed;
	z-index: 999;
    width: 100%;
    height: 100vh;
    top: 0;
	left: 0;
    transform: scaleY(0);
    background-color: #a2c2d0;/*伸びる背景色の設定*/
	animation-name:PageAnime;
	animation-duration:1.2s;
	animation-timing-function:ease-in-out;
	animation-fill-mode:forwards;

}

@keyframes PageAnime{
	0% {
		transform-origin:bottom;
		transform:scaleY(0);
	}
	50% {
		transform-origin:bottom;
		transform:scaleY(1);
	}
	50.001% {
		transform-origin:top;
	}
	100% {
		transform-origin:top;
		transform:scaleY(0);
	}
}

/*画面遷移の後現れるコンテンツ設定*/

#container{
	opacity: 0;/*はじめは透過0に*/
}

/*bodyにappearクラスがついたら出現*/
body.appear #container{
	animation-name:PageAnimeAppear;
	animation-duration:1s;
	animation-delay: 0.8s;
	animation-fill-mode:forwards;
	opacity: 0;
}

@keyframes PageAnimeAppear{
	0% {
	opacity: 0;
	}
	100% {
	opacity: 1;
}
}

/* タイピング風 */
.TextTyping span {
	display: none;
}

/*文字列後ろの線の設定*/
.TextTyping::after {
 	content: "|";
	animation: typinganime 1s ease infinite;
}

@keyframes typinganime{
	from{opacity:0}
	to{opacity:1}
}

/*タイトル文字の出現*/

.bgextend{
	animation-name:bgextendAnimeBase;
	animation-duration:1s;
	animation-fill-mode:forwards;
	position: relative;
	overflow: hidden;/*　はみ出た色要素を隠す　*/
	opacity:0;
}

@keyframes bgextendAnimeBase{
  from {
    opacity:0;
  }

  to {
    opacity:1;  
}
}

/*中の要素*/
.bgappear{
	animation-name:bgextendAnimeSecond;
	animation-duration:1s;
	animation-delay: 0.6s;
	animation-fill-mode:forwards;
	opacity: 0;
}

@keyframes bgextendAnimeSecond{
	0% {
	opacity: 0;
	}
	100% {
	opacity: 1;
}
}

/*左から右*/
.bgLRextend::before{
	animation-name:bgLRextendAnime;
	animation-duration:1s;
	animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #666;/*伸びる背景色の設定*/
}
@keyframes bgLRextendAnime{
	0% {
		transform-origin:left;
		transform:scaleX(0);
	}
	50% {
		transform-origin:left;
		transform:scaleX(1);
	}
	50.001% {
		transform-origin:right;
	}
	100% {
		transform-origin:right;
		transform:scaleX(0);
	}
}

/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger,
.bgLRextendTrigger{
    opacity: 0;
}

/* その場で */
.fadeIn{
animation-name:fadeInAnime;
animation-duration:1s;
animation-fill-mode:forwards;
opacity:0;
}

@keyframes fadeInAnime{
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* 下から */

.fadeUp{
animation-name:fadeUpAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity:0;
}

@keyframes fadeUpAnime{
  from {
    opacity: 0;
	transform: translateY(100px);
  }

  to {
    opacity: 1;
	transform: translateY(0);
  }
}

/* 上から */

.fadeDown{
animation-name:fadeDownAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity:0;
}

@keyframes fadeDownAnime{
  from {
    opacity: 0;
	transform: translateY(-100px);
  }

  to {
    opacity: 1;
	transform: translateY(0);
  }
}

/* 左から */

.fadeLeft{
animation-name:fadeLeftAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity:0;
}

@keyframes fadeLeftAnime{
  from {
    opacity: 0;
	transform: translateX(-100px);
  }

  to {
    opacity: 1;
	transform: translateX(0);
  }
}

/* 右から */

.fadeRight{
animation-name:fadeRightAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity:0;
}

@keyframes fadeRightAnime{
  from {
    opacity: 0;
	transform: translateX(100px);
  }

  to {
    opacity: 1;
	transform: translateX(0);
  }
}

/*全て共通：hideエリアをはじめは非表示*/
.hide-area{
	display: none;
}

/*全て共通：モーダルのボタンの色を変更したい場合*/
.modaal-close:after, 
.modaal-close:before{
	background:#ccc;	
}

.modaal-close:focus:after,
.modaal-close:focus:before,
.modaal-close:hover:after,
.modaal-close:hover:before{
	background:#666;
}

/*確認を促すモーダル：タイトルの色を変更したい場合*/
#modaal-title{
	font-size:1.2rem;
	text-align: center;
	margin: 0 0 20px 0;
}

/*動画表示のモーダル：余白を変更したい場合*/
.modaal-video .modaal-inner-wrapper{
	padding:0;
}

.modaal-container {
    max-width: 80vw;   /* ビューポートの幅の90%が最大 */
    max-height: 80vh;  /* ビューポートの高さの90%が最大 */   /* 高さを自動調整 */
    display: block;    /* 余計な余白を防ぐ */
    margin: auto;      /* 中央揃え */
	background-color: #F0EADB; /* 背景のベージュと合わせた色 */
}

.modaal-gallery-item img{
	max-width: 80vw;   /* ビューポートの幅の90%が最大 */
    max-height: 80vh;  /* ビューポートの高さの90%が最大 */
    object-fit: contain; /* 画像がコンテナ内に収まるように縮小（アスペクト比を維持） */
	display: block;    /* 余計な余白を防ぐ */
    margin: auto;   
	padding: 5%;
}

.btn03{
    /*影の基点とするためrelativeを指定*/
    width: 20%;
    height: 15%;
    position: relative;
    /*ボタンの形状*/
    text-decoration: none;
    display: inline-block;
    text-align: center;
    background: transparent;
    border-radius: 25px;
    border: solid 1px #555;
    outline: none;
    /*アニメーションの指定*/
    transition: all 0.2s ease;
    font-size: small;
}

/*hoverをした後のボタンの形状*/
.btn03:hover{
	border-color:transparent;	
}

/*ボタンの中のテキスト*/
.btn03 span {
    position: relative;
    z-index: 2;/*z-indexの数値をあげて文字を背景よりも手前に表示*/
    /*テキストの形状*/
    display: block;
    padding: 10px 10px;
    background: #f8f4e6;
    border-radius: 25px;
    color: #555;
    /*アニメーションの指定*/
    transition: all 0.3s ease;
    text-align: center;
}

/*== 右下に押し込まれる（立体が平面に） */

/*影の設定*/
.pushright:before {
    content: "";
    /*絶対配置で影の位置を決める*/
    position: absolute;
	z-index: -1;
    top: 4px;
    left: 4px;
    /*影の形状*/
    width: 100%;
    height: 100%;
	border-radius: 25px;
    background-color: #555;
}

/*hoverの際にX・Y軸に4pxずらす*/
.pushright:hover span {
	background-color: #555;
	color: #f8f4e6;
	transform: translate(4px, 4px);
}
.button-area {
    width: 100%; /* 親要素の幅いっぱいに広げる */
    text-align: right; /* このプロパティで、中のインライン要素を右寄せにします */
    /* もし必要であれば、ボタンの上の余白などをここで調整 */
    margin-top: 20px;
}

/* ボタン共通設定 */
.btn04 {
    /*線の基点とするためrelativeを指定*/
	position: relative;
    /*ボタンの形状*/
	display:inline-block;
    padding: 10px 30px;
	color:#333;
	border:1px solid #ccc;
    text-decoration: none;
    outline: none;
    /*はみ出す背景色を隠す*/
 	overflow: hidden;
}

/*hoverした際のボタンの形状*/
.btn04:hover {
	color:#ccc;
	border-color: transparent;
    /*色の変化を遅らせる*/
	transition-delay: .6s;
}

/*線の設定*/
.btn04 span{
    display: block;
    z-index: 2;
}

/*== 線から塗に変化（左から右） */

/*線の設定*/
.borderleft span::before,
.borderleft span::after {
    content: '';
    /*絶対配置で線の位置を決める*/
    position: absolute;
    width:0;
    height:1px;
    /*線の形状*/
    background: #333;
    /*アニメーションの設定*/
	transition: all .3s;
}

/*左上線*/
.borderleft span::before {
    left:0;
    top:0;
}

/*左下線*/
.borderleft span::after {
    left:0;
    bottom:0;
}

/*hoverをすると線が伸びる*/
.borderleft:hover span::before,
.borderleft:hover span::after {
    width: 100%;
}

/*背景の設定*/
.borderleft::before{
	content: '';
    /*絶対配置で線の位置を決める*/
	position: absolute;
	left: 0;
    bottom:0;
	z-index: -1;
    /*背景の形状*/
	height: 100%;
	width: 0;
    /*アニメーションの設定*/
	transition: all .3s;
}

/*hoverをすると背景が伸びる*/
.borderleft:hover::before{
	width: 100%;
    /*0.4秒遅れてアニメーション*/
	transition-delay: .4s;
}